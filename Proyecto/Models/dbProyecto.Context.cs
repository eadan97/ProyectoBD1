//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AlineacionPartido> AlineacionPartido { get; set; }
        public virtual DbSet<AnotadorPartido> AnotadorPartido { get; set; }
        public virtual DbSet<Arbitro> Arbitro { get; set; }
        public virtual DbSet<CambioPartido> CambioPartido { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Competicion> Competicion { get; set; }
        public virtual DbSet<Contratacion> Contratacion { get; set; }
        public virtual DbSet<Direccion> Direccion { get; set; }
        public virtual DbSet<Entrenador> Entrenador { get; set; }
        public virtual DbSet<EntrenadorTitulo> EntrenadorTitulo { get; set; }
        public virtual DbSet<Equipo> Equipo { get; set; }
        public virtual DbSet<EquipoTorneo> EquipoTorneo { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<EspecialidadJugador> EspecialidadJugador { get; set; }
        public virtual DbSet<Fecha> Fecha { get; set; }
        public virtual DbSet<Federacion> Federacion { get; set; }
        public virtual DbSet<FuncionarioCorreo> FuncionarioCorreo { get; set; }
        public virtual DbSet<FuncionarioDeportivo> FuncionarioDeportivo { get; set; }
        public virtual DbSet<FuncionarioDireccion> FuncionarioDireccion { get; set; }
        public virtual DbSet<Hist_AlineacionPartido> Hist_AlineacionPartido { get; set; }
        public virtual DbSet<Hist_AnotadorPartido> Hist_AnotadorPartido { get; set; }
        public virtual DbSet<Hist_CambioPartido> Hist_CambioPartido { get; set; }
        public virtual DbSet<Hist_EquipoTorneo> Hist_EquipoTorneo { get; set; }
        public virtual DbSet<Hist_Fecha> Hist_Fecha { get; set; }
        public virtual DbSet<Hist_Partido> Hist_Partido { get; set; }
        public virtual DbSet<Hist_PartidoArbitro> Hist_PartidoArbitro { get; set; }
        public virtual DbSet<Hist_Torneo> Hist_Torneo { get; set; }
        public virtual DbSet<Jugador> Jugador { get; set; }
        public virtual DbSet<Oferta> Oferta { get; set; }
        public virtual DbSet<Partido> Partido { get; set; }
        public virtual DbSet<PartidoArbitro> PartidoArbitro { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<SocioEquipo> SocioEquipo { get; set; }
        public virtual DbSet<Temporada> Temporada { get; set; }
        public virtual DbSet<TipoCompeticion> TipoCompeticion { get; set; }
        public virtual DbSet<TituloAcademico> TituloAcademico { get; set; }
        public virtual DbSet<Torneo> Torneo { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<ArbitrosTorneo_Result> ArbitrosTorneo(Nullable<int> codTorneo)
        {
            var codTorneoParameter = codTorneo.HasValue ?
                new ObjectParameter("codTorneo", codTorneo) :
                new ObjectParameter("codTorneo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ArbitrosTorneo_Result>("ArbitrosTorneo", codTorneoParameter);
        }
    
        public virtual ObjectResult<DatosEntrenador_Result> DatosEntrenador(Nullable<int> codPersona)
        {
            var codPersonaParameter = codPersona.HasValue ?
                new ObjectParameter("codPersona", codPersona) :
                new ObjectParameter("codPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosEntrenador_Result>("DatosEntrenador", codPersonaParameter);
        }
    
        public virtual ObjectResult<DatosJugador_Result> DatosJugador(Nullable<int> codPersona)
        {
            var codPersonaParameter = codPersona.HasValue ?
                new ObjectParameter("codPersona", codPersona) :
                new ObjectParameter("codPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosJugador_Result>("DatosJugador", codPersonaParameter);
        }
    
        public virtual ObjectResult<Encuentros_Result> Encuentros(Nullable<int> codEquipo1, Nullable<int> codEquipo2, Nullable<System.DateTime> fecha)
        {
            var codEquipo1Parameter = codEquipo1.HasValue ?
                new ObjectParameter("codEquipo1", codEquipo1) :
                new ObjectParameter("codEquipo1", typeof(int));
    
            var codEquipo2Parameter = codEquipo2.HasValue ?
                new ObjectParameter("codEquipo2", codEquipo2) :
                new ObjectParameter("codEquipo2", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Encuentros_Result>("Encuentros", codEquipo1Parameter, codEquipo2Parameter, fechaParameter);
        }
    
        public virtual int GenerarCalendarioFechas(Nullable<decimal> codFederacion, Nullable<decimal> codTorneo)
        {
            var codFederacionParameter = codFederacion.HasValue ?
                new ObjectParameter("codFederacion", codFederacion) :
                new ObjectParameter("codFederacion", typeof(decimal));
    
            var codTorneoParameter = codTorneo.HasValue ?
                new ObjectParameter("codTorneo", codTorneo) :
                new ObjectParameter("codTorneo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarCalendarioFechas", codFederacionParameter, codTorneoParameter);
        }
    
        public virtual int GenerarResultadosAleatorios(Nullable<decimal> codTorneo)
        {
            var codTorneoParameter = codTorneo.HasValue ?
                new ObjectParameter("codTorneo", codTorneo) :
                new ObjectParameter("codTorneo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarResultadosAleatorios", codTorneoParameter);
        }
    
        public virtual ObjectResult<Goleadores_Result> Goleadores(Nullable<int> codEquipo1, Nullable<int> codEquipo2, Nullable<System.DateTime> fecha)
        {
            var codEquipo1Parameter = codEquipo1.HasValue ?
                new ObjectParameter("codEquipo1", codEquipo1) :
                new ObjectParameter("codEquipo1", typeof(int));
    
            var codEquipo2Parameter = codEquipo2.HasValue ?
                new ObjectParameter("codEquipo2", codEquipo2) :
                new ObjectParameter("codEquipo2", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Goleadores_Result>("Goleadores", codEquipo1Parameter, codEquipo2Parameter, fechaParameter);
        }
    
        public virtual ObjectResult<TablaGeneral_Result> TablaGeneral(Nullable<int> codCompetencia, Nullable<int> codTemporada)
        {
            var codCompetenciaParameter = codCompetencia.HasValue ?
                new ObjectParameter("codCompetencia", codCompetencia) :
                new ObjectParameter("codCompetencia", typeof(int));
    
            var codTemporadaParameter = codTemporada.HasValue ?
                new ObjectParameter("codTemporada", codTemporada) :
                new ObjectParameter("codTemporada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TablaGeneral_Result>("TablaGeneral", codCompetenciaParameter, codTemporadaParameter);
        }
    }
}
